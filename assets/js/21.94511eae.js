(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{187:function(e,s,n){"use strict";n.r(s);var r=n(0),t=Object(r.a)({},function(){var e=this,s=e.$createElement,n=e._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h2",{attrs:{id:"在react项目中使用less"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#在react项目中使用less","aria-hidden":"true"}},[e._v("#")]),e._v(" 在react项目中使用less")]),e._v(" "),n("ol",[n("li",[e._v("使用 create-react-app 创建的项目，默认情况下是看不到 webpack 相关的配置文件，我们需要给它暴露出来，使用下面命令即可：")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("npm run eject\n")])])]),n("ol",{attrs:{start:"2"}},[n("li",[e._v("添加less")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("npm install less less-loader --save-dev\n")])])]),n("ol",{attrs:{start:"3"}},[n("li",[e._v("修改webpack配置文件 （修改下面两段代码即可）")])]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("**const cssRegex = /\\.(css|less)$/;**\n   \nconst getStyleLoaders = (cssOptions, preProcessor) => {\n    const loaders = [\n      isEnvDevelopment && require.resolve('style-loader'),\n      isEnvProduction && {\n        loader: MiniCssExtractPlugin.loader,\n        options: shouldUseRelativeAssetPaths ? { publicPath: '../../' } : {},\n      },\n      {\n        loader: require.resolve('css-loader'),\n        options: cssOptions,\n      },\n      ***{\n        loader: require.resolve('less-loader'),// compiles Less to CSS\n        options: cssOptions,\n      },***\n      {\n        // Options for PostCSS as we reference these options twice\n        // Adds vendor prefixing based on your specified browser support in\n        // package.json\n        loader: require.resolve('postcss-loader'),\n        options: {\n          // Necessary for external CSS imports to work\n          // https://github.com/facebook/create-react-app/issues/2677\n          ident: 'postcss',\n          plugins: () => [\n            require('postcss-flexbugs-fixes'),\n            require('postcss-preset-env')({\n              autoprefixer: {\n                flexbox: 'no-2009',\n              },\n              stage: 3,\n            }),\n            // Adds PostCSS Normalize as the reset css with default options,\n            // so that it honors browserslist config in package.json\n            // which in turn let's users customize the target behavior as per their needs.\n            postcssNormalize(),\n          ],\n          sourceMap: isEnvProduction && shouldUseSourceMap,\n        },\n      },\n    ].filter(Boolean);\n    if (preProcessor) {\n      loaders.push(\n        {\n          loader: require.resolve('resolve-url-loader'),\n          options: {\n            sourceMap: isEnvProduction && shouldUseSourceMap,\n          },\n        },\n        {\n          loader: require.resolve(preProcessor),\n          options: {\n            sourceMap: true,\n          },\n        }\n      );\n    }\n    return loaders;\n  };\n")])])])])},[],!1,null,null,null);s.default=t.exports}}]);