(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{213:function(a,e,t){"use strict";t.r(e);var n=t(0),r=Object(n.a)({},function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"数组相关"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数组相关","aria-hidden":"true"}},[a._v("#")]),a._v(" 数组相关")]),a._v(" "),t("ol",[t("li",[t("p",[a._v("Array.from()用于将类数组转为真正的数组（"),t("em",[t("strong",[a._v("所谓类似数组的对象，本质特征只有一点，即必须有length属性")])]),a._v("）\n常见的类似数组的对象是 DOM 操作返回的 NodeList 集合，以及函数内部的arguments对象")]),a._v(" "),t("ul",[t("li",[a._v("判断是否转成真正的数组方法： Object.prototype.toString.call(obj)")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("let arrayLike = {\n'0': 'a',\n'1': 'b',\n'2': 'c',\nlength: 3\n};\n\n// ES6的写法\nlet arr2 = Array.from(arrayLike); // ['a', 'b', 'c']\n")])])])]),a._v(" "),t("li",[t("p",[a._v("Array.of()用于将一组值转换为数组，主要是为了弥补数组构造函数Array()和new Array()的不足，")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("Array.of() // []\nArray.of(undefined) // [undefined]\nArray.of(1) // [1]\nArray.of(1, 2) // [1, 2]\n")])])])]),a._v(" "),t("li",[t("p",[a._v("Array.copyWithin()在当前数组内部，将指定位置的成员复制到其他位置（会覆盖原有成员），然后返回当前数组。也就是说，使用这个方法，会修改当前数组。")])])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("Array.prototype.copyWithin(target, start = 0, end = this.length)\n")])])]),t("ul",[t("li",[t("p",[a._v("它接受三个参数。")]),a._v(" "),t("ul",[t("li",[a._v("target（必需）：从该位置开始替换数据。如果为负值，表示倒数。")]),a._v(" "),t("li",[a._v("start（可选）：从该位置开始读取数据，默认为 0。如果为负值，表示从末尾开始计算。")]),a._v(" "),t("li",[a._v("end（可选）："),t("strong",[t("strong",[a._v("到该位置前停止读取数据")])]),a._v("，默认等于数组长度。如果为负值，表示从末尾开始计算。")])])])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("[1, 2, 3, 4, 5].copyWithin(0, 3)\n// [4, 5, 3, 4, 5]\n")])])]),t("ol",{attrs:{start:"4"}},[t("li",[a._v("find()和findIndex():")])]),a._v(" "),t("ul",[t("li",[a._v("数组实例的find方法，用于找出第一个符合条件的数组成员。它的参数是一个回调函数，所有数组成员依次执行该回调函数，直到找出第一个返回值为true的成员，然后返回该成员。如果没有符合条件的成员，则返回undefined。")]),a._v(" "),t("li",[a._v("数组实例的findIndex方法的用法与find方法非常类似，返回第一个符合条件的数组成员的位置，如果所有成员都不符合条件，则返回-1。")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("[1, 5, 10, 15].find(function(value, index, arr) {\n   return value > 9;\n }) // 10\n [1, 5, 10, 15].findIndex(function(value, index, arr) {\n   return value > 9;\n }) // 2\n")])])]),t("ol",{attrs:{start:"5"}},[t("li",[a._v("fill方法使用给定值，填充一个数组。有3个参数，后两个可选（1: 要填充的值 23:用于指定填充的起始位置和结束位置）")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("['a', 'b', 'c'].fill(7)\n// [7, 7, 7]\n\nnew Array(3).fill(7)\n// [7, 7, 7]\n['a', 'b', 'c'].fill(7, 1, 2)\n// ['a', 7, 'c']\n\n")])])]),t("ol",{attrs:{start:"6"}},[t("li",[t("p",[a._v("数组实例的 entries()，keys() 和 values()\nES6 提供三个新的方法——entries()，keys()和values()——用于遍历数组。它们都返回一个遍历器对象（详见《Iterator》一章），可以用for...of循环进行遍历，唯一的区别是keys()是对键名的遍历、values()是对键值的遍历，entries()是对键值对的遍历。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("for (let index of ['a', 'b'].keys()) {\nconsole.log(index);\n}\n// 0\n// 1\n\nfor (let elem of ['a', 'b'].values()) {\nconsole.log(elem);\n}\n// 'a'\n// 'b'\n\nfor (let [index, elem] of ['a', 'b'].entries()) {\nconsole.log(index, elem);\n}\n// 0 \"a\"\n// 1 \"b\"\n")])])])]),a._v(" "),t("li",[t("p",[a._v("Array.prototype.includes方法返回一个布尔值，表示某个数组是否包含给定的值")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("[1, 2, 3].includes(2)     // true\n[1, 2, 3].includes(4)     // false\n[1, 2, NaN].includes(NaN) // true\n")])])])]),a._v(" "),t("li",[t("p",[a._v("Array.prototype.flat()用于将嵌套的数组“拉平”，变成一维的数组。该方法返回一个新数组，对原数据没有影响。")])])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("[1, 2, [3, 4]].flat()\n// [1, 2, 3, 4]\n\n")])])])])},[],!1,null,null,null);e.default=r.exports}}]);