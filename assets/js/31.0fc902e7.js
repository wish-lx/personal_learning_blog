(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{195:function(n,e,t){"use strict";t.r(e);var r=t(0),s=Object(r.a)({},function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("ol",[t("li",[n._v("封装post请求（axios）")])]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("export function post(url,data = {}){\n   return new Promise((resolve,reject) => {\n     axios.post(url,data)\n          .then(response => {\n            resolve(response.data);\n          },err => {\n            reject(err)\n          })\n   })\n }\n在main.js中引入:\nimport axios from 'axios'\nimport {post,fetch,patch,put} from './utils/http'\n//定义全局变量\nVue.prototype.$post=post;\nVue.prototype.$fetch=fetch;\nVue.prototype.$patch=patch;\nVue.prototype.$put=put;\n\n最后在组件里直接使用:\n mounted(){\n    this.$post('/api/v2/movie/top250')\n      .then((response) => {\n        console.log(response)\n      })\n  }\n")])])]),t("ol",{attrs:{start:"2"}},[t("li",[n._v("添加拦截器")])]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v(" 1. 添加请求拦截器\naxios.interceptors.request.use(function(config){\n  // 在发送请求之前做些什么\n  // 判断是否携带token,如果携带就在所有请求上面都加上token\n  if(store.getters.accessToken){\n    config.headers.Authorization = `token ${store.getters.accessToken}`\n  }\n  // 在请求成功之前加载动画\n  showFullScreenLoading()\n  // 解决axios post请求后台接收不到参数的问题\n  if(store.getters.accessToken){\n    config.data.token = store.getters.accessToken\n    // 使传递的参数由json转为key：val形式\n    config.data = $.params(config.data)\n  }\n  // \n  return config\n},function(err){\n // 对请求错误做些什么\n  return Promise.reject(err)\n})\n2. 添加响应拦截器\naxios.interceptors.reponse.use(function(response){\n  // 对响应数据做些什么\n  // 停止动画\n  tryHideFullScreenLoading()\n   return response\n},function(err){\n  // 对响应错误做些什么\n  if(err.status == 401){\n    // 返回登陆页面\n    router.replace{\n      path:\n      component:\n    }\n  }\n  return Promise.reject(err)\n})\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("1. 添加请求拦截器\n axios.interceptors.request.use(function(config){\n   // 判断是否存在token ，存在的话在所有请求中加上token\n   if(store.getter.accessToken){\n     config.token = store.getter.accessToken\n   }\n   // 添加loading动画\n   // 解决axios post请求后台收不到参数的问题\n   if(store.getter.accessToken){\n     config.data.token = store.getter.accessToken\n     config.data = $.params(config.data)\n   }\n },function(err){\n   return Promise.reject(err)\n })\n 2. 添加响应拦截器\n axios.interceptors.response.use(function(res){\n  // 停止动画操作\n },function(err){\n    if(err.response){\n      switch(err.response){\n        case 401:\n        router.replace({\n          path: '/login',\n          query:\n        })\n      }\n    }\n })\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("export function post (url, data={}){\n  return new Primise(resolve,reject){\n    axios.post(url,data)\n    .then((res)=>{resolve(res.data)},err=>{\n       reject(err)\n    })\n  }\n}\nthis.prototype.$post = post\nthis.$post(url).then(function(res){\n  console.log(res)\n}).catch(function(err){\n  console.log(err)\n})\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("export function post(url, data={}){\n  return new Promise(resolve, reject){\n    axios.post(url, data)\n    .then(response=>{\n      return response(data)\n    },err=>{\n      reject(err)\n    })\n  }\n}\nimport axios from 'axios'\nimport {post} from ''\nVue.prototype.$post = post\nmounted{\n  this.axios.$post(url).then(res=>{\n    console.log(res)\n  })\n}\n\n拦截器：\naxios.interceptors.request.use(function(config){\n  // 判断是否存在token\n\n},function(err){\n  return Promise.reject(err)\n})\naxios.interceptors.response.use(function(res){\n  \x3c!-- 停止动画操作 --\x3e\n},function(err){\n  \x3c!-- 如果响应码是401，则返回登陆页面 --\x3e\n  return Promise reject(err)\n})\n\n")])])])])},[],!1,null,null,null);e.default=s.exports}}]);